name: tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  tests:
    name: Python ${{ matrix.python }}
    runs-on: "ubuntu-latest"
    strategy:
      fail-fast: false
      matrix:
        python: [ "3.7", "3.8", "3.9", "3.10", "3.11" ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools tox codecov
      - name: Test
        run: |
          tox -e py -- --cov=./xsdata_pydantic --cov-branch --doctest-glob="docs/*.rst"
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
  sample-tests:
    name: Python ${{ matrix.python }} - ${{ matrix.collection.name }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python: [ "3.10" ]
        collection:
          - { name: "Amadeus", id: "amadeus" }
          - { name: "Autosar", id: "autosar" }
          - { name: "BPMN", id: "bpmn" }
          - { name: "Common Types", id: "common_types" }
#          - { name: "Crossref Metadata", id: "crossref" }
          - { name: "DateX II", id: "datexii" }
#          - { name: "DefXML", id: "defxml" }
          - { name: "EWP", id: "ewp" }
          - { name: "Generali", id: "generali" }
#          - { name: "NeTEx", id: "netex" }
          - { name: "NPO API", id: "npo" }
          - { name: "ReqIF", id: "reqif" }
          - { name: "Sabre", id: "sabre" }
          - { name: "SpaceX", id: "spacex" }
          - { name: "Travelport", id: "travelport" }
          - { name: "UBL", id: "ubl" }
          - { name: "XCBL", id: "xcbl" }
    steps:
      - uses: actions/checkout@v3
      - uses: actions/checkout@v3
        with:
          repository: tefra/xsdata-samples
          ref: master
          submodules: true
          path: xsdata-samples
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install dependencies
        run: |
          pip install --upgrade pip mypy
          pip install .[cli,test]
      - name: Generate Code
        working-directory: ./xsdata-samples
        if: matrix.collection != 'defxml'
        run: OUTPUT_FORMAT=pydantic CLI_FLAGS="--unnest-classes" make build-${{ matrix.collection.id }}
      - name: Run Tests
        if: matrix.collection != 'common_types'
        working-directory: ./xsdata-samples
        run: OUTPUT_FORMAT=pydantic make test-${{ matrix.collection.id }}
      - name: Run mypy
        working-directory: ./xsdata-samples
        run: OUTPUT_FORMAT=pydantic make mypy-${{ matrix.collection.id }}

  pre-commit:
    name: Pre-commit Hooks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - uses: pre-commit/action@v3.0.0
